[
  {
    "question": "Какой метод используется для вывода текста в консоль?",
    "options": [
      "print()",
      "console.log()",
      "System.out.println()",
      "echo()"
    ],
    "correctAnswer": "System.out.println()"
  },
  {
    "question": "Что представляет ключевое слово super?",
    "options": [
      "Текущий экземпляр класса",
      "Текущий экземпляр родительского класса",
      "Наследованный класс"
    ],
    "correctAnswer": "Текущий экземпляр родительского класса"
  },
  {
    "question": "Что такое анонимный класс?",
    "options": [
      "Класс, который невозможно наследовать",
      "Класс без конструктора",
      "Внутренний класс, который объявляется без указания имени класса"
    ],
    "correctAnswer": "Внутренний класс, который объявляется без указания имени класса"
  },
  {
    "question": "Как обозначается побитовое логическое отрицание?",
    "options": [
      "~",
      "!",
      "-"
    ],
    "correctAnswer": "~"
  },
  {
    "question": "Какое ключевое слово не используется для работы с исключениями?",
    "options": [
      "finally",
      "switch",
      "throws"
    ],
    "correctAnswer": "switch"
  },
  {
    "question": "Являются ли исключения, порожденные от runtimeException, проверяемыми?",
    "options": [
      "Да",
      "Нет"
    ],
    "correctAnswer": "Нет"
  },
  {
    "question": "Vector - реализация интерфейса:",
    "options": [
      "List",
      "System",
      "Map"
    ],
    "correctAnswer": "List"
  },
  {
    "question": "По какому принципу работает стэк?",
    "options": [
      "LIFO",
      "FIFO",
      "CY"
    ],
    "correctAnswer": "LIFO"
  },
  {
    "question": "Почему нельзя наследовать от класса string?",
    "options": [
      "Он не имеет тела",
      "Он не является классом",
      "Он объявлен как final"
    ],
    "correctAnswer": "Он объявлен как final"
  },
  {
    "question": "Какие режимы открытия файла существуют в Java?",
    "options": [
      "rws, rwd",
      "r, rw, rws, rwd",
      "r, w, s, r+, s+, w+"
    ],
    "correctAnswer": "r, rw, rws, rwd"
  },
  {
    "question": "В каком пакете сосредоточен основной функционал работы с потоками?",
    "options": [
      "java.io",
      "java.line",
      "java.thread"
    ],
    "correctAnswer": "java.io"
  },
  {
    "question": "Как называется процесс сохранения состояния объекта в последовательность байт?",
    "options": [
      "Байтизация",
      "Десериализация",
      "Сериализация"
    ],
    "correctAnswer": "Сериализация"
  },
  {
    "question": "Каким методом можно перевернуть строку?",
    "options": [
      "string.reverse();",
      "stringBuilder.reverse();",
      "string.return();"
    ],
    "correctAnswer": "stringBuilder.reverse();"
  },
  {
    "question": "В каком состоянии не может пребывать поток?",
    "options": [
      "TERMINATED",
      "RUNNABLE",
      "PAUSED"
    ],
    "correctAnswer": "PAUSED"
  },
  {
    "question": "Какой метод переводит поток в режим ожидания?",
    "options": [
      "wait()",
      "stop()",
      "pause()"
    ],
    "correctAnswer": "wait()"
  },
  {
    "question": "Какая аннотация используется при переопределении метода?",
    "options": [
      "Override",
      "@Redefine",
      "@Override"
    ],
    "correctAnswer": "@Override"
  }
]
